<?php
/**
 * 事务
 * User: Administrator
 * Date: 2020/2/12 0012
 * Time: 22:32
 */

namespace EasySwoole\ORM\Tests;


use PHPUnit\Framework\TestCase;
use EasySwoole\ORM\Db\Config;
use EasySwoole\ORM\Db\Connection;
use EasySwoole\ORM\DbManager;



use EasySwoole\ORM\Tests\models\TestUserListModel;
use EasySwoole\ORM\Tests\models\TestUserModel;
use EasySwoole\ORM\Tests\models\TestTimeStampModel;
use EasySwoole\ORM\Tests\models\TestFunctionFieldNameModel;
use EasySwoole\ORM\Tests\models\TestRelationModel;
use EasySwoole\ORM\Tests\models\TestUserEventModel;
use EasySwoole\ORM\Tests\models\TestUserListGetterModel;

class TranscationTest extends TestCase
{
    /**
     * @var $connection Connection
     */
    protected $connection;
    protected $tableName = 'user_test_list';
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $config = new Config(MYSQL_CONFIG);
        $this->connection = new Connection($config);
        DbManager::getInstance()->addConnection($this->connection);
        $connection = DbManager::getInstance()->getConnection();
        $this->assertTrue($connection === $this->connection);
    }

    /**
     * @throws \EasySwoole\ORM\Exception\Exception
     * @throws \EasySwoole\Pool\Exception\PoolEmpty
     * @throws \Throwable
     */
    public function testInvoke()
    {
        DbManager::getInstance()->invoke(function ($client){
            DbManager::getInstance()->startTransaction($client);
            $model = TestTimeStampModel::invoke($client);

            $model->name = 'siam';
            $model->age = 21;
            $model->save();
            $this->assertIsInt($model->id);

            DbManager::getInstance()->rollback($client);

            // 此时查找 为空
            $has = TestTimeStampModel::invoke($client)->get([
                'name' => 'siam'
            ]);
            $this->assertNull($has);
        });
    }

}